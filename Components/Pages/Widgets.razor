@page "/widgets"

@inherits LayoutComponentBase
@using CustomDashboard.Components
@using Microsoft.AspNetCore.Components
@using Widget.Forecast
@using System.Collections.ObjectModel
@using Newtonsoft.Json
@inject IJSRuntime JSRuntime
@rendermode InteractiveServer

<PageTitle>Widgets</PageTitle>

<style>
    section {
        margin-top: 2rem;
        margin-bottom: 2rem;
        padding-top: 2rem;
        padding-bottom: 2rem;
        border-bottom: 1px solid rgba(1, 1, 1, 0.2);
    }
</style>

<h1>Widgets</h1>

<section>
    <h2>Planned & actual forcast widget</h2>
    <div class="d-flex align-items-start" style="gap: 5px;">
        <WidgetForecastComponent Instance="@ForecastInstance" />
        <WidgetForecastComponent Instance="@ForecastInstance2" />
        <WidgetForecastComponent Instance="@ForecastInstance3" />
    </div>
</section>

@code {
    private WidgetForecast WidgetForecast;
    private WidgetForecastInstance ForecastInstance;
    private WidgetForecastInstance ForecastInstance2;
    private WidgetForecastInstance ForecastInstance3;

    protected readonly System.Collections.ObjectModel.ReadOnlyCollection<Widget.Forecast.WidgetForecastType> ForecastTypes =
    WidgetForecast.Types;


    protected override void OnInitialized()
    {
        ForecastInstance = new WidgetForecastInstance()
            {
                Items = new List<WidgetForecastItem>([
                new WidgetForecastItem() {
                    IsActual = true,
                    Degrees = 15,
                    ValueInPercent = 4,
                    ValueText= "9.1kn /4°",
                    IsVisible= true,
                    Type = WidgetForecast.Types.FirstOrDefault(x => x.Name == "Speed")
                    },
                    new WidgetForecastItem() {
                    IsActual = false,
                    Degrees = 10,
                    ValueInPercent = 3,
                    ValueText= "9.1kn /3°",
                    IsVisible= true,
                    Type = WidgetForecast.Types.FirstOrDefault(x => x.Name == "Speed")
                    },

                    new WidgetForecastItem() {
                    IsActual = false,
                    Degrees = 224,
                    ValueInPercent = 30,
                    ValueText= "8kn / 224°",
                    IsVisible= true,
                    Type = WidgetForecast.Types.FirstOrDefault(x => x.Name == "Wind")
                    },
                    new WidgetForecastItem() {
                    IsActual = true,
                    Degrees = 222,
                    ValueInPercent = 80,
                    IsVisible= true,
                    ValueText= "7.5kn / 222°",
                    Type = WidgetForecast.Types.FirstOrDefault(x => x.Name == "Wind")
                    },
                    new WidgetForecastItem() {
                    IsActual = true,
                    Degrees = 50,
                    ValueInPercent = 18,
                    ValueText= "1.7m / 6s 12°",
                    IsVisible= true,
                    Type = WidgetForecast.Types.FirstOrDefault(x => x.Name == "Wave")
                    },
                    new WidgetForecastItem() {
                    IsActual = false,
                    Degrees = 50,
                    ValueText= "1.5m / 6s 120°",
                    ValueInPercent = 90,
                    IsVisible= true,
                    Type = WidgetForecast.Types.FirstOrDefault(x => x.Name == "Wave")
                    },
                    new WidgetForecastItem() {
                    IsActual = false,
                    Degrees = 144,
                    ValueText= "1.5m / 6s 120°",
                    ValueInPercent = 55,
                    IsVisible= true,
                    Type = WidgetForecast.Types.FirstOrDefault(x => x.Name == "Current")
                    },
                    new WidgetForecastItem() {
                    IsActual = true,
                    Degrees = 162,
                    ValueText= "1.5m / 6s 120°",
                    ValueInPercent = 45,
                    IsVisible= true,
                    Type = WidgetForecast.Types.FirstOrDefault(x => x.Name == "Current")
                    }
                ])
            };

            ForecastInstance2 = new WidgetForecastInstance()
            {
                DegreePositioning=28,
                Items = new List<WidgetForecastItem>([
                new WidgetForecastItem() {
                    IsActual = true,
                    Degrees = 15,
                    ValueInPercent = 4,
                    ValueText= "9.1kn /4°",
                    IsVisible= true,
                    Type = WidgetForecast.Types.FirstOrDefault(x => x.Name == "Speed")
                    },
                    new WidgetForecastItem() {
                    IsActual = false,
                    Degrees = 10,
                    ValueInPercent = 3,
                    ValueText= "9.1kn /3°",
                    IsVisible= true,
                    Type = WidgetForecast.Types.FirstOrDefault(x => x.Name == "Speed")
                    },

                    new WidgetForecastItem() {
                    IsActual = false,
                    Degrees = 224,
                    ValueInPercent = 30,
                    ValueText= "8kn / 224°",
                    IsVisible= true,
                    Type = WidgetForecast.Types.FirstOrDefault(x => x.Name == "Wind")
                    },
                    new WidgetForecastItem() {
                    IsActual = true,
                    Degrees = 222,
                    ValueInPercent = 80,
                    IsVisible= true,
                    ValueText= "7.5kn / 222°",
                    Type = WidgetForecast.Types.FirstOrDefault(x => x.Name == "Wind")
                    },
                    new WidgetForecastItem() {
                    IsActual = true,
                    Degrees = 10,
                    ValueInPercent = 18,
                    ValueText= "1.7m / 6s 12°",
                    IsVisible= true,
                    Type = WidgetForecast.Types.FirstOrDefault(x => x.Name == "Wave")
                    },
                    new WidgetForecastItem() {
                    IsActual = false,
                    Degrees = 50,
                    ValueText= "1.5m / 6s 120°",
                    ValueInPercent = 90,
                    IsVisible= true,
                    Type = WidgetForecast.Types.FirstOrDefault(x => x.Name == "Wave")
                    },
                    new WidgetForecastItem() {
                    IsActual = false,
                    Degrees = 224,
                    ValueText= "1.5m / 6s 120°",
                    ValueInPercent = 55,
                    IsVisible= true,
                    Type = WidgetForecast.Types.FirstOrDefault(x => x.Name == "Current")
                    },
                    new WidgetForecastItem() {
                    IsActual = true,
                    Degrees = 235,
                    ValueText= "1.5m / 6s 120°",
                    ValueInPercent = 45,
                    IsVisible= true,
                    Type = WidgetForecast.Types.FirstOrDefault(x => x.Name == "Current")
                    }
                ])
            };
            ForecastInstance3 = new WidgetForecastInstance()
            {
                DegreePositioning=90,
                DiameterInPx=300,
                TargetDotSizeInPx=80,
                Items = new List<WidgetForecastItem>([
                new WidgetForecastItem() {
                    IsActual = true,
                    Degrees = 90,
                    ValueInPercent = 4,
                    ValueText= "9.1kn /4°",
                    IsVisible= true,
                    Type = WidgetForecast.Types.FirstOrDefault(x => x.Name == "Speed")
                    },
                    new WidgetForecastItem() {
                    IsActual = false,
                    Degrees = 92,
                    ValueInPercent = 3,
                    ValueText= "9.1kn /3°",
                    IsVisible= true,
                    Type = WidgetForecast.Types.FirstOrDefault(x => x.Name == "Speed")
                    },

                    new WidgetForecastItem() {
                    IsActual = false,
                    Degrees = 95,
                    ValueInPercent = 30,
                    ValueText= "8kn / 224°",
                    IsVisible= true,
                    Type = WidgetForecast.Types.FirstOrDefault(x => x.Name == "Wind")
                    },
                    new WidgetForecastItem() {
                    IsActual = true,
                    Degrees = 91,
                    ValueInPercent = 80,
                    IsVisible= true,
                    ValueText= "7.5kn / 222°",
                    Type = WidgetForecast.Types.FirstOrDefault(x => x.Name == "Wind")
                    },
                    new WidgetForecastItem() {
                    IsActual = true,
                    Degrees = 88,
                    ValueInPercent = 18,
                    ValueText= "1.7m / 6s 12°",
                    IsVisible= true,
                    Type = WidgetForecast.Types.FirstOrDefault(x => x.Name == "Wave")
                    },
                    new WidgetForecastItem() {
                    IsActual = false,
                    Degrees = 86,
                    ValueText= "1.5m / 6s 120°",
                    ValueInPercent = 90,
                    IsVisible= true,
                    Type = WidgetForecast.Types.FirstOrDefault(x => x.Name == "Wave")
                    },
                    new WidgetForecastItem() {
                    IsActual = false,
                    Degrees = 87,
                    ValueText= "1.5m / 6s 120°",
                    ValueInPercent = 55,
                    IsVisible= true,
                    Type = WidgetForecast.Types.FirstOrDefault(x => x.Name == "Current")
                    },
                    new WidgetForecastItem() {
                    IsActual = true,
                    Degrees = 83,
                    ValueText= "1.5m / 6s 120°",
                    ValueInPercent = 45,
                    IsVisible= true,
                    Type = WidgetForecast.Types.FirstOrDefault(x => x.Name == "Current")
                    }
                ])
            };
    }
}