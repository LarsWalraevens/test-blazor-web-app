@namespace test_blazor_web_app.Components

@code {
    [Parameter] public long CurrentSliderTicks { get; set; }
    [Parameter] public long MinTicks { get; set; }
    [Parameter] public long MaxTicks { get; set; }
    [Parameter] public List<DateTime> SliderDates { get; set; }
    [Parameter] public EventCallback<long> OnSeek { get; set; }
    [Parameter] public EventCallback TogglePlayPause { get; set; }
    [Parameter] public EventCallback Stop { get; set; }
    [Parameter] public string PlayPauseIcon { get; set; }

    private async Task OnSliderValueChanged(ChangeEventArgs e)
    {
        long selectedTicks = long.Parse(e.Value.ToString());
        await OnSeek.InvokeAsync(selectedTicks);
    }

    private string GetFormattedDate(long ticks)
    {
        return new DateTime(ticks).ToString("dd/MM/yyyy HH:mm:ss");
    }
}

<div class="controls">
    <button class="btn btn-primary" @onclick="TogglePlayPause">
        <i class="bi @PlayPauseIcon"></i>
    </button>
    <button class="btn btn-danger" @onclick="Stop">
        <i class="bi bi-stop"></i>
    </button>
    <div class="slider-container">
        <input type="range" min="@MinTicks" max="@MaxTicks" value="@CurrentSliderTicks" @oninput="OnSliderValueChanged"
            class="timeline-slider" />
        <div class="slider-label"
            style="left: @((CurrentSliderTicks - MinTicks) / (double)(MaxTicks - MinTicks) * 100)%">
            @GetFormattedDate(CurrentSliderTicks)
        </div>
    </div>
</div>
