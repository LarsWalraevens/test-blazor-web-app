@namespace test_blazor_web_app.Components

@using System.Globalization

@code {
    [Parameter] public string CurrentSliderDate { get; set; }
    [Parameter] public List<string> SliderDates { get; set; }
    [Parameter] public EventCallback<string> Seek { get; set; }
    [Parameter] public EventCallback TogglePlayPause { get; set; }
    [Parameter] public EventCallback Stop { get; set; }
    [Parameter] public string PlayPauseIcon { get; set; }

    private async Task OnSliderValueChanged(ChangeEventArgs e)
    {
        var value = e.Value?.ToString();
        if (value != null && SliderDates.Contains(value))
        {
            await Seek.InvokeAsync(value);
        }
    }

    private string GetFormattedDate(string dateString)
    {
        return DateTime.ParseExact(dateString, "MMddyyyyHHmm", CultureInfo.InvariantCulture)
        .ToString("dd/MM/yyyy HH:mm:ss");
    }
}

<div class="controls">
    <button class="btn btn-primary" @onclick="TogglePlayPause">
        <i class="bi @PlayPauseIcon"></i>
    </button>
    <button class="btn btn-danger" @onclick="Stop">
        <i class="bi bi-stop"></i>
    </button>
    <div class="slider-container">
        <input type="range" min="@SliderDates.First()" max="@SliderDates.Last()" value="@CurrentSliderDate"
            @oninput="OnSliderValueChanged" class="timeline-slider" />
        <div class="slider-label"
            style="left: @((SliderDates.IndexOf(CurrentSliderDate) / (double)(SliderDates.Count - 1)) * 100)%">
            @GetFormattedDate(CurrentSliderDate)
        </div>
    </div>
</div>
