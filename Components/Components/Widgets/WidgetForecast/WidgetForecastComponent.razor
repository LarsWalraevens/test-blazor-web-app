@namespace test_blazor_web_app.Components

@using Newtonsoft.Json
@using Microsoft.AspNetCore.Components
@using Widget.Forecast
@using System.Collections.ObjectModel
@inject IJSRuntime JSRuntime

<WidgetForecastMap DiameterInPx="250">
    @* <WidgetForecastVessel Degrees="77" IsActual="true" /> *@

    @* <WidgetForecastVessel Degrees="-9" IsActual="false" /> *@


    @foreach (var item in ForecastItems.Where(x => x.Type.Name == "Speed"))
    {
        <WidgetForecastVessel Degrees="@item.Degrees" IsActual="@item.IsActual" />
        <div class="compass-map-vessel-waypoint @(item.IsActual ? "compass-map-vessel-waypoint-actual" : null)"
            style="transform: rotate(@(item.Degrees)deg)" />
        <div class="compass-map-target-dot-button-container"
            style="transform: rotate(@(item.Degrees)deg); transform-origin: 0% 100%; width: @(TargetDotSizeInPx)px; left:calc(50% - @(TargetDotSizeInPx/2)px)">
            <span class="compass-map-target-dot-button"
                style="height: @(TargetDotSizeInPx)px; width: @(TargetDotSizeInPx)px; ">
                <div class="compass-map-target-dot-button-content" style="transform: rotate(-@(item.Degrees)deg);">
                    <i class="bi @(item.Type.Icon)"
                        style="font-size: @(TargetDotSizeInPx - (TargetDotSizeInPx / 1.8))px;" />
                    <div class="compass-map-target-dot-button-indicators">
                        <span id="planned" class="active"
                            style="width: @(TargetDotSizeInPx/6)px; height: @(TargetDotSizeInPx/6)px; " />
                        <span id="actual" class="active"
                            style="width: @(TargetDotSizeInPx/6)px; height: @(TargetDotSizeInPx/6)px; " />
                    </div>
                </div>
            </span>

        </div>
    }
    @foreach (var item in ForecastItems.Where(x => x.Type.Name != "Speed"))
    {
        <div class="compass-map-vessel-waypoint @(item.IsActual ? "compass-map-vessel-waypoint-actual" : null)"
            style="transform: rotate(@(item.Degrees)deg)" />
        <div class="compass-map-target-dot-button-container"
            style="transform: rotate(@(item.Degrees)deg); transform-origin: 0% calc(100% - @(TargetDotSizeInPx /2)px); width: @(TargetDotSizeInPx)px; left:calc(50% - @(TargetDotSizeInPx/2)px);">
            <span class="compass-map-target-dot-button"
                style="height: @(TargetDotSizeInPx)px; width: @(TargetDotSizeInPx)px; ">
                <div class="compass-map-target-dot-button-content" style="transform: rotate(-@(item.Degrees)deg);">
                    <i class="bi @(item.Type.Icon)"
                        style="font-size: @(TargetDotSizeInPx - (TargetDotSizeInPx / 1.8))px;" />
                    <div class="compass-map-target-dot-button-indicators">
                        <span id="planned" class="active"
                            style="width: @(TargetDotSizeInPx/6)px; height: @(TargetDotSizeInPx/6)px; " />
                        <span id="actual" class="active"
                            style="width: @(TargetDotSizeInPx/6)px; height: @(TargetDotSizeInPx/6)px; " />
                    </div>
                </div>
            </span>

        </div>
    }
</WidgetForecastMap>

<style>
    .compass-map-target-dot-button-container .compass-map-target-dot-button {
        position: absolute;
        bottom: 95%;
        right: 0;
        transform-origin: 0% 100%;
        border-radius: 100%;
        z-index: 32;
        background: #1B87DF;
        box-shadow: inset 0px 0px 0px 2px rgba(1, 1, 1, 0.2);
        display: flex;
        justify-content: center;
        align-items: center;
        flex-direction: column;
        gap: 4px;
    }

    .compass-map-target-dot-button-container .compass-map-target-dot-button .compass-map-target-dot-button-content {
        display: flex;
        justify-content: center;
        align-items: center;
        flex-direction: column;
    }

    .compass-map-target-dot-button-container .compass-map-target-dot-button .compass-map-target-dot-button-indicators {
        display: flex;
        justify-content: center;
        align-items: center;
        flex-direction: row;
        gap: 2px;
    }

    .compass-map-target-dot-button-container .compass-map-target-dot-button .compass-map-target-dot-button-indicators>span {
        border-radius: 100%;
        background-color: #175B93;
        box-sizing: inset 0px 0px 0px 1px rgba(1, 1, 1, 0.1);
    }

    .compass-map-target-dot-button-container .compass-map-target-dot-button .compass-map-target-dot-button-indicators>#planned.active {
        background-color: white !important;
    }

    .compass-map-target-dot-button-container .compass-map-target-dot-button .compass-map-target-dot-button-indicators>#actual.active {
        background-color: #1EFF00 !important;
    }

    .compass-map-target-dot-button-container .compass-map-target-dot-button i {
        color: white;
    }

    .compass-map-target-dot-button-container {
        position: absolute;
        height: 50%;
        bottom: 50%;
        border-radius: 10%;
        z-index: 1;
    }

    .compass-map-vessel-waypoint {
        position: absolute;
        height: 50%;
        bottom: 50%;
        left: 50%;
        transform-origin: 0% 100%;
        border-radius: 10%;
        z-index: 1;
        border-left: 1px solid white;
        border-right: 1px solid white;
    }

    .compass-map-vessel-waypoint-actual {
        border-color: #1EFF00 !important;
        border-style: dashed !important;
    }
</style>

@code {
    [Parameter]
    public List<WidgetForecastItem> ForecastItems { get; set; }

    [Parameter]
    public int TargetDotSizeInPx { get; set; }

}