@using Microsoft.AspNetCore.Components
@using Newtonsoft.Json
@namespace test_blazor_web_app.Components

<div class="gauge-container">
    <div class="gauge">
        <div class="gauge__meter" style="transform: rotate(@DegreeValue)"></div>
        <div class="gauge__ticks">
            @foreach (var label in Labels)
            {
                <div class="gauge__tick" style="transform: rotate(@label.Degree) translateY(-90px)"></div>
            }
        </div>
        <div class="gauge__labels">
            @foreach (var label in Labels)
            {
                <div class="gauge__label" style="transform: rotate(@label.Degree) translateY(-100px)">
                    @label.Value
                </div>
            }
        </div>
    </div>
    <div class="gauge__value">
        @Value/@MaxValue
    </div>
</div>

<style>
    .gauge-container {
        display: flex;
        flex-direction: column;
        align-items: center;
        margin-top: 20px;
        padding: 20px;
    }

    .gauge {
        position: relative;
        width: 200px;
        height: 100px;
        border-radius: 100px 100px 0 0;
        background: rgba(0, 0, 0, 0.8);
    }

    .gauge__meter {
        position: absolute;
        left: 50%;
        bottom: 0;
        width: 4px;
        height: 80px;
        border-top-left-radius: 30px;
        border-top-right-radius: 30px;
        background: #ff0000;
        transform-origin: bottom;
        transition: transform 0.3s ease-out;
    }

    .gauge__ticks {
        position: absolute;
        left: 50%;
        bottom: 0;
        width: 100%;
        height: 100%;
        pointer-events: none;
    }

    .gauge__tick {
        position: absolute;
        width: 2px;
        height: 10px;
        background: #ffffff;
        bottom: 0;
        transform-origin: bottom center;
    }

    .gauge__labels {
        position: absolute;
        left: 40%;
        bottom: -80%;
        width: 100%;
        height: 100%;
        pointer-events: none;
    }

    .gauge__label {
        position: absolute;
        width: 40px;
        text-align: center;
        font-size: 12px;
        color: #000;
        transform-origin: center bottom;
    }

    .gauge__value {
        margin: 5px 0px;
    }
</style>

@code {
    [Parameter] public int MaxValue { get; set; } = 200;
    [Parameter] public int Value { get; set; } = 0;

    private string DegreeValue => $"{-90 + (Value * 180 / MaxValue)}deg";

    private List<GaugeLabel> Labels { get; set; }

    protected override void OnInitialized()
    {
        // Generate labels and ticks for the gauge (e.g., every 20 units)
        Labels = Enumerable.Range(0, MaxValue / 20 + 1)
        .Select(i => new GaugeLabel
            {
                Value = (i * 20).ToString(),
                Degree = $"{-90 + (i * 20 * 180 / MaxValue)}deg"
            })
        .ToList();
    }

    private class GaugeLabel
    {
        public string Value { get; set; }
        public string Degree { get; set; }
    }
}
